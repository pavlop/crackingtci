import org.junit.Test;
import static org.junit.Assert.*;

public class OnePointNineNineTest {
	
	@Test
	public void test0() {
		int[] x = new int[] {0,0,10,10};
		int[] y = new int[] {0,10,0,10};
		int D = 47;
		assertEquals(5, new OnePointNineNine().countSubsets(x, y, D));
	}
	
	@Test
	public void test1() {
		int[] x = new int[] {0,0,10,10};
		int[] y = new int[] {0,10,0,10};
		int D = 4;
		assertEquals(16, new OnePointNineNine().countSubsets(x, y, D));
	}
	
	@Test
	public void test2() {
		int[] x = new int[] {0,4,8};
		int[] y = new int[] {0,3,6};
		int D = 5;
		assertEquals(5, new OnePointNineNine().countSubsets(x, y, D));
	}
	
	@Test
	public void test3() {
		int[] x = new int[] {0, 4, 8, 20, 25, 30, 35, 40};
		int[] y = new int[] {0, 3, 6, 20, 20, 20, 20, 20};
		int D = 5;
		assertEquals(65, new OnePointNineNine().countSubsets(x, y, D));
	}
	
	@Test
	public void test4() {
		int[] x = new int[] {4637, 7770, 9911, 3887, 310, 8546, 104, 9820, 6710, 4128, 8224, 2492, 8956, 6162, 3392, 9736, 1540, 7744, 3783, 5451, 3756, 6153, 4846, 9852,
2678, 6500, 4117, 3994, 9126, 8950, 4913, 8598, 5692, 3400, 133, 4284, 656, 4742, 8727, 4904, 338, 7144, 7447, 8807, 1985, 6591, 40, 9614, 1839,
2724, 391, 1419, 2404, 9268, 1490, 3121, 654, 1337, 7787, 9269, 9413, 4515, 7787, 8622, 6718, 839, 238, 2490, 253, 1029, 9286, 5226, 180, 6451,
7826, 1707, 5119, 7238, 3393, 8980, 7234, 879, 5481, 703, 3991, 35, 3205, 2697, 9462, 4489, 2074, 7880, 1909, 150, 2378, 1555, 5232, 5959, 8755, 7679};
		int[] y = new int[] {4026, 2791, 3044, 4049, 6759, 6606, 3440, 8858, 6954, 2544, 4778, 2367, 5113, 8588, 3772, 4741, 3693, 5140, 8822, 8853, 9934, 6277, 5097, 285,
1031, 9872, 1012, 5883, 8992, 7257, 8889, 6558, 9997, 3868, 7731, 7508, 3729, 6398, 4102, 2054, 4835, 5707, 4271, 1676, 9487, 6336, 9829, 1058,
9965, 4998, 1042, 6320, 7669, 1893, 6021, 4211, 8496, 7585, 6882, 8410, 5155, 5869, 3376, 7173, 5726, 1574, 8911, 4192, 8324, 963, 8867, 7292,
7127, 4238, 6796, 6225, 4143, 7775, 4312, 965, 5933, 558, 8642, 268, 7208, 5688, 267, 4338, 4023, 7982, 4535, 545, 7228, 1884, 1660, 3241, 6388, 6572,
6515, 5912};
		int D = 1;
		assertEquals(976371285, new OnePointNineNine().countSubsets(x, y, D));
	}
}
